// <auto-generated />
using System;
using GraParagrafowa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraParagrafowa.Migrations
{
    [DbContext(typeof(GraParagrafowaContext))]
    [Migration("20240704123327_new1")]
    partial class new1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GraParagrafowa.Models.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OutcomeBlockId")
                        .HasColumnType("int");

                    b.Property<int>("SourceBlockId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("storryID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OutcomeBlockId");

                    b.HasIndex("SourceBlockId");

                    b.ToTable("Choice");
                });

            modelBuilder.Entity("GraParagrafowa.Models.DecisionBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InStoryId")
                        .HasColumnType("int");

                    b.Property<int?>("StoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoryId");

                    b.ToTable("DecisionBlock");
                });

            modelBuilder.Entity("GraParagrafowa.Models.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Story");
                });

            modelBuilder.Entity("GraParagrafowa.Models.Choice", b =>
                {
                    b.HasOne("GraParagrafowa.Models.DecisionBlock", "OutcomeBlock")
                        .WithMany()
                        .HasForeignKey("OutcomeBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraParagrafowa.Models.DecisionBlock", "SourceBlock")
                        .WithMany()
                        .HasForeignKey("SourceBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OutcomeBlock");

                    b.Navigation("SourceBlock");
                });

            modelBuilder.Entity("GraParagrafowa.Models.DecisionBlock", b =>
                {
                    b.HasOne("GraParagrafowa.Models.Story", null)
                        .WithMany("HistoryBlocks")
                        .HasForeignKey("StoryId");
                });

            modelBuilder.Entity("GraParagrafowa.Models.Story", b =>
                {
                    b.Navigation("HistoryBlocks");
                });
#pragma warning restore 612, 618
        }
    }
}
